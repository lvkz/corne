/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        panesplit_v: split_vertically {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE) &kp LS(BSLH)>;
            label = "SPLIT_VERTICALLY";
        };

        panesplit_h: split_horizontally {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE) &kp MINUS>;
            label = "SPLIT_HORIZONTALLY";
        };

        pane_close: close_pane {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE) &kp X>;
            label = "CLOSE_PANE";
        };

        tmux: goto_pane_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(SPACE)>;
            label = "GOTO_PANE_1";
        };

        apps: applications {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(SPACE) &kp LG(NUMBER_1)>;
            label = "APPLICATIONS";
        };
    };

    combos {
        compatible = "zmk,combos";

        caps {
            bindings = <&mo 5>;
            key-positions = <41 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            display-name = "Base";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 2  &kp ENTER    &kp SPACE  &mo 1  &kp RALT
            >;
        };

        lower_layer {
            display-name = "# and $";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp NUMBER_1   &kp NUMBER_2          &kp NUMBER_3      &kp NUMBER_4     &kp N5           &kp NUMBER_6  &kp NUMBER_7     &kp NUMBER_8       &kp NUMBER_9           &kp NUMBER_0      &kp BSPC
&kp AMPS   &kp LESS_THAN  &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp LEFT_BRACE   &kp BACKSLASH    &kp SLASH     &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp GRAVE
&kp LSHFT  &kp TILDE      &kp HASH              &kp AT_SIGN       &kp EXCLAMATION  &kp COLON        &kp QUESTION  &kp LS(MINUS)    &kp MINUS          &kp PLUS               &kp EQUAL         &trans
                                                &kp LGUI          &mo 4            &trans           &trans        &trans           &kp RALT
            >;
        };

        raise_layer {
            display-name = "Nav";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &none  &kp LC(LEFT)     &kp LC(RIGHT)      &kp LC(LS(LEFT))  &kp LC(LS(RIGHT))    &kp KP_NUMBER_0  &kp DOLLAR            &kp LG(LS(E))  &kp LG(SPACE)  &none  &kp BSPC
&trans     &none  &kp LC(LA(F13))  &kp LC(LA(F14))    &kp LC(LA(F15))   &kp LC(LA(C))        &kp LEFT         &kp DOWN              &kp UP         &kp RIGHT      &none  &none
&kp LSHFT  &none  &none            &kp LC(LA(ENTER))  &kp LC(LA(LEFT))  &kp LC(LA(RIGHT))    &apps            &kp LS(LG(NUMBER_4))  &kp LC(UP)     &kp LC(DOWN)   &none  &trans
                                   &kp LGUI           &trans            &trans               &trans           &mo 3                 &kp RALT
            >;
        };

        function_layer {
            bindings = <
&kp LC(LG(Q))  &kp F1  &kp F2      &kp F3            &kp F4       &kp F5     &kp F6        &kp F7        &kp F8      &kp F9        &kp F10  &kp DEL
&trans         &none   &kp K_PREV  &kp K_PLAY_PAUSE  &kp K_NEXT   &kp F11    &kp F12       &kp C_VOL_DN  &kp K_MUTE  &kp C_VOL_UP  &none    &none
&kp LC(LS(T))  &none   &none       &none             &pane_close  &tmux      &panesplit_v  &panesplit_h  &none       &none         &none    &trans
                                   &none             &none        &none      &none         &none         &none
            >;

            label = "Func";
        };

        extra_layer {
            bindings = <
&none       &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &kp BACKSPACE
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &none  &none
&none       &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
                                        &none         &none         &none           &none  &none  &none
            >;

            label = "Extra";
        };

        letter_caps {
            bindings = <
&trans  &kp LS(Q)  &kp LS(W)  &kp LS(E)  &kp LS(R)  &kp LS(T)    &kp LS(Y)  &kp LS(U)  &kp LS(I)  &kp LS(O)  &kp LS(P)  &trans
&trans  &kp LS(A)  &kp LS(S)  &kp LS(D)  &kp LS(F)  &kp LS(G)    &kp LS(H)  &kp LS(J)  &kp LS(K)  &kp LS(L)  &kp SEMI   &kp APOS
&trans  &kp LS(Z)  &kp LS(X)  &kp LS(C)  &kp LS(V)  &kp LS(B)    &kp LS(N)  &kp LS(M)  &kp COMMA  &kp DOT    &trans     &trans
                              &trans     &trans     &trans       &trans     &trans     &trans
            >;

            label = "All Caps";
        };
    };
};
